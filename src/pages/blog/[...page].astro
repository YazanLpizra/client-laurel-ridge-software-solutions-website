---
import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";
import Landing from "@components/Landing.astro";
import BlogPreview from "@components/BlogPreview.astro";
import Pagination from "@components/TemplateComponents/Pagination.astro";

export const getStaticPaths = (async ({ paginate }) => {
    const posts = await getCollection("blog");

    const sortedPosts = posts.sort(
        (a, b) =>
            new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf(),
    );

    // paginates with options - https://docs.astro.build/en/reference/api-reference/#paginate
    return paginate(sortedPosts, {
        pageSize: 3,
    });
}) satisfies GetStaticPaths;

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import { getOptimizedImage } from "@utils/utils";
import landingImage from "@assets/images/landing.jpg"; // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage);

const { page } = Astro.props as { page: Page };
---

<BaseLayout
    title="Blog"
    description="Meta description for the page"
    preloadedImage={optimizedImage}
>
    <!-- ============================================ -->
    <!--                    LANDING                   -->
    <!-- ============================================ -->

    <Landing title="Blog" image={optimizedImage} />

    <!-- ============================================ -->
    <!--                    Blog                      -->
    <!-- ============================================ -->

    <section id="blog-1144">
        <div class="cs-container">
            <div class="cs-content">
                <div class="cs-content-flex">
                    <span class="cs-topper">News And Articles</span>
                    <h2 class="cs-title">Hot off the press!</h2>
                </div>
            </div>
            <ul class="cs-card-group">
                {page.data.map((post) => <BlogPreview post={post} />)}
            </ul>
            <!-- Pagination -->
            <Pagination page={page} />
        </div>
    </section>

    <CTA />
</BaseLayout>

<style lang="scss">
    /* Mobile - 360px */
    @media only screen and (min-width: 0rem) {
        #blog-1144 {
            padding: var(--sectionPadding);
            position: relative;
            z-index: 1;

            .cs-container {
                width: 100%;
                /* changes to 1280px at tablet */
                max-width: calc(784 / 16 * 1rem);
                margin: auto;
                display: flex;
                flex-direction: column;
                align-items: center;
                /* 48px - 64px */
                gap: clamp(3rem, 6vw, 4rem);
            }

            .cs-content {
                /* set text align to left if content needs to be left aligned */
                text-align: left;
                width: 100%;
                display: flex;
                flex-direction: column;
                /* centers content horizontally, set to flex-start to left align */
                align-items: flex-start;
            }

            .cs-title {
                /* max width of 18 characters, incldues spaces between words */
                max-width: 20ch;
            }

            .cs-card-group {
                width: 100%;
                padding: 0;
                margin: 0;
                display: grid;
                grid-template-columns: repeat(12, 1fr);
                gap: calc(20 / 16 * 1rem);
            }

            .cs-item {
                text-align: left;
                list-style: none;
                border-radius: calc(16 / 16 * 1rem);
                overflow: hidden;
                background-color: #f7f7f7;
                border: 1px solid #e8e8e8;
                grid-column: span 12;
                display: flex;
                flex-direction: column;
                justify-content: space-between;
                position: relative;
                z-index: 1;
                transition:
                    box-shadow 0.3s,
                    transform 0.3s;

                &:hover {
                    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
                    .cs-picture {
                        img {
                            opacity: 0.3;
                            transform: scale(1.1);
                        }
                    }
                }
            }

            .cs-picture {
                width: 100%;
                height: calc(240 / 16 * 1rem);
                background-color: #1a1a1a;
                border-bottom: 4px solid var(--primary);
                overflow: hidden;
                display: block;
                /* prevents flexbox from squishing it */
                flex: none;
                position: relative;
                z-index: 1;

                img {
                    position: absolute;
                    top: 0;
                    left: 0;
                    height: 100%;
                    width: 100%;
                    object-fit: cover;
                    transition:
                        transform 0.6s,
                        opacity 0.3s;
                }
            }

            .cs-flex {
                height: 100%;
                padding: calc(24 / 16 * 1rem);
                /* prevents padding and border from affecting height and width */
                box-sizing: border-box;
                display: flex;
                flex-direction: column;
                align-items: flex-start;
                position: relative;
                z-index: 2;
            }

            .cs-date {
                font-size: calc(16 / 16 * 1rem);
                line-height: 1.2em;
                font-weight: 700;
                text-align: inherit;
                margin: 0;
                padding: calc(8 / 16 * 1rem) calc(16 / 16 * 1rem);
                /* prevents padding and border from affecting height and width */
                box-sizing: border-box;
                background-color: var(--primary);
                border-radius: calc(8 / 16 * 1rem) calc(8 / 16 * 1rem) 0 0;
                color: #fff;
                display: inline-block;
                position: absolute;
                left: calc(24 / 16 * 1rem);
                bottom: 100%;
                z-index: 2;
            }

            .cs-h3 {
                font-size: calc(20 / 16 * 1rem);
                text-align: inherit;
                line-height: 1.2em;
                font-weight: 700;
                color: var(--headerColor);
                margin: 0 0 calc(12 / 16 * 1rem) 0;
                transition: color 0.3s;
            }

            .cs-item-text {
                /* 14px - 16px */
                font-size: clamp(0.875rem, 1.5vw, 1rem);
                line-height: 1.5em;
                text-align: inherit;
                margin: 0 0 calc(20 / 16 * 1rem);
                color: var(--bodyTextColor);
            }

            .cs-link {
                font-size: calc(16 / 16 * 1rem);
                line-height: 1.2em;
                font-weight: 700;
                text-decoration: none;
                margin-top: auto;
                color: var(--primary);
                display: flex;
                align-items: center;
                justify-content: center;

                &:hover {
                    .cs-arrow {
                        transform: translateX(0.25rem);
                    }
                }
            }

            .cs-arrow {
                width: calc(20 / 16 * 1rem);
                height: auto;
                transition: transform 0.3s;
            }
        }
    }

    /* Tablet - 768px */
    @media only screen and (min-width: 48rem) {
        #blog-1144 {
            .cs-container {
                max-width: calc(1280 / 16 * 1rem);
            }

            .cs-content {
                text-align: left;
                flex-direction: row;
                justify-content: space-between;
                align-items: flex-end;
            }

            .cs-title {
                margin: 0;
            }

            .cs-item {
                grid-column: span 4;
            }
        }
    }

    /* Dark Mode */
    @media only screen and (min-width: 0rem) {
        body.dark-mode {
            #blog-1144 {
                &:before {
                    content: "";
                    width: 100%;
                    height: 100%;
                    background: var(--dark);
                    opacity: 0.9;
                    position: absolute;
                    display: block;
                    top: 0;
                    left: 0;
                    z-index: -1;
                }

                .cs-title,
                .cs-text,
                .cs-h3,
                .cs-link,
                .cs-item-text {
                    color: var(--bodyTextColorWhite);
                }

                .cs-text,
                .cs-item-text {
                    opacity: 0.8;
                }

                .cs-item {
                    background-color: rgba(0, 0, 0, 0.2);
                    border-color: rgba(255, 255, 255, 0.2);
                    &:before {
                        opacity: 0.3;
                    }
                }

                .cs-picture {
                    border-color: #fff;
                }

                .cs-date {
                    background-color: #fff;
                }

                .cs-date {
                    color: var(--primary);
                }

                .cs-arrow,
                .cs-floater {
                    filter: grayscale(1) brightness(1000%);
                }
            }
        }
    }
</style>
