---
import { Image } from "astro:assets";
import { formatDate } from "@utils/utils.ts";

// Receiving incoming props and destructuring them
const { post } = Astro.props;
// Extract slug from the id (remove "en/" prefix and ".md" suffix)
const slug = post.id.replace("en/", "").replace(".md", "");
const { title, date, description, image, imageAlt } = post.data;
---

<li class="cs-item">
    <Image src={image} alt={imageAlt} class="cs-picture" />
    <div class="cs-flex">
        <span class="cs-date">{formatDate(date)}</span>
        <h3 class="cs-h3">{title}</h3>
        <p class="cs-item-text">
            {description}
        </p>
        <a href={`/blog/${slug}`} class="cs-link">
            Read More
            <img
                class="cs-arrow"
                loading="lazy"
                decoding="async"
                src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/event-chevron.svg"
                alt="icon"
                width="20"
                height="20"
                aria-hidden="true"
            />
        </a>
    </div>
</li>

<style lang="scss">
    /* Mobile - 360px */
    @media only screen and (min-width: 0rem) {
        .cs-item {
            text-align: left;
            list-style: none;
            border-radius: calc(16 / 16 * 1rem);
            overflow: hidden;
            background-color: #f7f7f7;
            border: 1px solid #e8e8e8;
            grid-column: span 12;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            position: relative;
            z-index: 1;
            transition:
                box-shadow 0.3s,
                transform 0.3s;

            &:hover {
                box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
                .cs-picture {
                    img {
                        opacity: 0.3;
                        transform: scale(1.1);
                    }
                }
            }
        }

        .cs-picture {
            width: 100%;
            height: calc(240 / 16 * 1rem);
            background-color: #1a1a1a;
            border-bottom: 4px solid var(--primary);
            overflow: hidden;
            display: block;
            /* prevents flexbox from squishing it */
            flex: none;
            position: relative;
            z-index: 1;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
                transition:
                    transform 0.6s,
                    opacity 0.3s;
            }
        }

        .cs-flex {
            height: 100%;
            padding: calc(24 / 16 * 1rem);
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            position: relative;
            z-index: 2;
        }

        .cs-date {
            font-size: calc(16 / 16 * 1rem);
            line-height: 1.2em;
            font-weight: 700;
            text-align: inherit;
            margin: 0;
            padding: calc(8 / 16 * 1rem) calc(16 / 16 * 1rem);
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            background-color: var(--primary);
            border-radius: calc(8 / 16 * 1rem) calc(8 / 16 * 1rem) 0 0;
            color: #fff;
            display: inline-block;
            position: absolute;
            left: calc(24 / 16 * 1rem);
            bottom: 100%;
            z-index: 2;
        }

        .cs-h3 {
            font-size: calc(20 / 16 * 1rem);
            text-align: inherit;
            line-height: 1.2em;
            font-weight: 700;
            color: var(--headerColor);
            margin: 0 0 calc(12 / 16 * 1rem) 0;
            transition: color 0.3s;
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            text-align: inherit;
            margin: 0 0 calc(20 / 16 * 1rem);
            color: var(--bodyTextColor);
        }

        .cs-link {
            font-size: calc(16 / 16 * 1rem);
            line-height: 1.2em;
            font-weight: 700;
            text-decoration: none;
            margin-top: auto;
            color: var(--primary);
            display: flex;
            align-items: center;
            justify-content: center;

            &:hover {
                .cs-arrow {
                    transform: translateX(0.25rem);
                }
            }
        }

        .cs-arrow {
            width: calc(20 / 16 * 1rem);
            height: auto;
            transition: transform 0.3s;
        }
    }

    /* Tablet - 768px */
    @media only screen and (min-width: 48rem) {
        .cs-item {
            grid-column: span 4;
        }
    }

    /* Dark Mode */
    @media only screen and (min-width: 0rem) {
        body.dark-mode {
            .cs-title,
            .cs-text,
            .cs-h3,
            .cs-link,
            .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text,
            .cs-item-text {
                opacity: 0.8;
            }

            .cs-item {
                background-color: rgba(0, 0, 0, 0.2);
                border-color: rgba(255, 255, 255, 0.2);
                &:before {
                    opacity: 0.3;
                }
            }

            .cs-picture {
                border-color: #fff;
            }

            .cs-date {
                background-color: #fff;
            }

            .cs-date {
                color: var(--primary);
            }

            .cs-arrow {
                filter: grayscale(1) brightness(1000%);
            }
        }
    }
</style>
